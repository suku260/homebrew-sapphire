
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-left*/left^%rightUMINUSAND ARRAY BUILD CLASS EQ FOR FUNCTION G GE IF IN INPUT L LBRACE LE LPAREN NAME NE NUMBER OR PRINT RBRACE RPAREN STRING WHILEstatement : PRINT expressionstatement : NAME "=" expressionstatement : NAME "=" INPUT LPAREN expression RPARENstatement : expression IN expressionstatement : IF LPAREN expression RPAREN LBRACE expression RBRACE\n\t\t|  IF LPAREN expression RPAREN LBRACE NAME "=" expression RBRACE\n\t\t|  IF LPAREN statement RPAREN LBRACE NAME "=" expression RBRACE\n\t\t|  IF LPAREN statement RPAREN LBRACE NAME "=" statement RBRACE\n\t\t|  IF LPAREN statement RPAREN LBRACE  statement RBRACEstatement : WHILE LPAREN NAME L expression RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t| WHILE LPAREN NAME L expression RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t| WHILE LPAREN NAME L expression RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t| WHILE LPAREN NAME L expression RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t| WHILE LPAREN NAME L expression RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t| WHILE LPAREN NAME L expression RPAREN LBRACE NAME "=" expression "%" expression RBRACE\n\t| WHILE LPAREN NAME G expression RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t| WHILE LPAREN NAME G expression RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t| WHILE LPAREN NAME G expression RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t| WHILE LPAREN NAME G expression RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t| WHILE LPAREN NAME G expression RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t| WHILE LPAREN NAME G expression RPAREN LBRACE NAME "=" expression "%" expression RBRACE\n\t| WHILE LPAREN NAME GE expression RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t| WHILE LPAREN NAME GE expression RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t| WHILE LPAREN NAME GE expression RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t| WHILE LPAREN NAME GE expression RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t| WHILE LPAREN NAME GE expression RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t| WHILE LPAREN NAME GE expression RPAREN LBRACE NAME "=" expression "%" expression RBRACE\n\t| WHILE LPAREN NAME LE expression RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t| WHILE LPAREN NAME LE expression RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t| WHILE LPAREN NAME LE expression RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t| WHILE LPAREN NAME LE expression RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t| WHILE LPAREN NAME LE expression RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t| WHILE LPAREN NAME LE expression RPAREN LBRACE NAME "=" expression "%" expression RBRACE\n\t| WHILE LPAREN NAME NE expression RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t| WHILE LPAREN NAME NE expression RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t| WHILE LPAREN NAME NE expression RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t| WHILE LPAREN NAME NE expression RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t| WHILE LPAREN NAME NE expression RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t| WHILE LPAREN NAME NE expression RPAREN LBRACE NAME "=" expression "%" expression RBRACEstatement : FOR LPAREN NAME "=" expression NAME L NUMBER  RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t             | FOR LPAREN NAME "=" expression NAME L NUMBER  RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME L NUMBER  RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME L NUMBER  RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME L NUMBER  RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME L NUMBER  RPAREN LBRACE NAME "=" expression "%" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME G NUMBER  RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME G NUMBER  RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME G NUMBER  RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME G NUMBER  RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME G NUMBER  RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME G NUMBER  RPAREN LBRACE NAME "=" expression "%" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME GE NUMBER  RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME GE NUMBER  RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME GE NUMBER  RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME GE NUMBER  RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME GE NUMBER  RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME GE NUMBER  RPAREN LBRACE NAME "=" expression "%" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME LE NUMBER  RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME LE NUMBER  RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME LE NUMBER  RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME LE NUMBER  RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME LE NUMBER  RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME LE NUMBER  RPAREN LBRACE NAME "=" expression "%" expression RBRACEstatement : expression L expression AND expression L expression\n    \t\t\t  | expression L expression AND expression G expression\n    \t\t\t  | expression L expression AND expression GE expression\n    \t\t\t  | expression L expression AND expression LE expression\n    \t\t\t  | expression L expression AND expression EQ expression\n    \t\t\t  | expression L expression AND expression NE expression\n                  | expression G expression AND expression L expression\n    \t\t\t  | expression G expression AND expression G expression\n    \t\t\t  | expression G expression AND expression GE expression\n    \t\t\t  | expression G expression AND expression LE expression\n    \t\t\t  | expression G expression AND expression EQ expression\n    \t\t\t  | expression G expression AND expression NE expression\n    \t\t\t  | expression GE expression AND expression L expression\n    \t\t\t  | expression GE expression AND expression G expression\n    \t\t\t  | expression GE expression AND expression GE expression\n    \t\t\t  | expression GE expression AND expression LE expression\n    \t\t\t  | expression GE expression AND expression EQ expression\n    \t\t\t  | expression GE expression AND expression NE expression\n    \t\t\t  | expression LE expression AND expression L expression\n    \t\t\t  | expression LE expression AND expression G expression\n    \t\t\t  | expression LE expression AND expression GE expression\n    \t\t\t  | expression LE expression AND expression LE expression\n    \t\t\t  | expression LE expression AND expression EQ expression\n    \t\t\t  | expression LE expression AND expression NE expression\n    \t\t\t  | expression EQ expression AND expression L expression\n    \t\t\t  | expression EQ expression AND expression G expression\n    \t\t\t  | expression EQ expression AND expression GE expression\n    \t\t\t  | expression EQ expression AND expression LE expression\n    \t\t\t  | expression EQ expression AND expression EQ expression\n    \t\t\t  | expression EQ expression AND expression NE expression\n    \t\t\t  | expression NE expression AND expression L expression\n    \t\t\t  | expression NE expression AND expression G expression\n    \t\t\t  | expression NE expression AND expression GE expression\n    \t\t\t  | expression NE expression AND expression LE expression\n    \t\t\t  | expression NE expression AND expression EQ expression\n    \t\t\t  | expression NE expression AND expression NE expressionstatement : expression L expression OR expression L expression\n    \t\t\t  | expression L expression OR expression G expression\n    \t\t\t  | expression L expression OR expression GE expression\n    \t\t\t  | expression L expression OR expression LE expression\n    \t\t\t  | expression L expression OR expression EQ expression\n    \t\t\t  | expression L expression OR expression NE expression\n                  | expression G expression OR expression L expression\n    \t\t\t  | expression G expression OR expression G expression\n    \t\t\t  | expression G expression OR expression GE expression\n    \t\t\t  | expression G expression OR expression LE expression\n    \t\t\t  | expression G expression OR expression EQ expression\n    \t\t\t  | expression G expression OR expression NE expression\n    \t\t\t  | expression GE expression OR expression L expression\n    \t\t\t  | expression GE expression OR expression G expression\n    \t\t\t  | expression GE expression OR expression GE expression\n    \t\t\t  | expression GE expression OR expression LE expression\n    \t\t\t  | expression GE expression OR expression EQ expression\n    \t\t\t  | expression GE expression OR expression NE expression\n    \t\t\t  | expression LE expression OR expression L expression\n    \t\t\t  | expression LE expression OR expression G expression\n    \t\t\t  | expression LE expression OR expression GE expression\n    \t\t\t  | expression LE expression OR expression LE expression\n    \t\t\t  | expression LE expression OR expression EQ expression\n    \t\t\t  | expression LE expression OR expression NE expression\n    \t\t\t  | expression EQ expression OR expression L expression\n    \t\t\t  | expression EQ expression OR expression G expression\n    \t\t\t  | expression EQ expression OR expression GE expression\n    \t\t\t  | expression EQ expression OR expression LE expression\n    \t\t\t  | expression EQ expression OR expression EQ expression\n    \t\t\t  | expression EQ expression OR expression NE expression\n    \t\t\t  | expression NE expression OR expression L expression\n    \t\t\t  | expression NE expression OR expression G expression\n    \t\t\t  | expression NE expression OR expression GE expression\n    \t\t\t  | expression NE expression OR expression LE expression\n    \t\t\t  | expression NE expression OR expression EQ expression\n    \t\t\t  | expression NE expression OR expression NE expressionstatement : FUNCTION expression LPAREN expression RPAREN LBRACE statement RBRACEstatement : CLASS expression LPAREN expression RPAREN LBRACE statement RBRACEstatement : BUILD expression LPAREN expression RPAREN LBRACE statement RBRACEstatement : expressionexpression : expression L expression\n                   | expression G expression\n                  | expression GE expression\n                  | expression LE expression\n                  | expression EQ expression\n                  | expression NE expressionexpression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression\n                  | expression \'^\' expression\n                  | expression \'%\' expressionexpression : \'-\' expression %prec UMINUSexpression : \'(\' expression \')\'expression : NUMBERexpression : ARRAYexpression : STRINGexpression : NAME'
    
_lr_action_items = {'PRINT':([0,32,126,219,220,221,297,],[2,2,2,2,2,2,2,]),'NAME':([0,2,7,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,40,41,42,43,44,45,53,54,55,56,57,58,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,97,98,99,100,101,102,119,126,132,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,219,220,221,295,297,298,299,300,301,302,328,329,330,331,332,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,410,411,412,413,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,],[4,17,17,-154,17,17,17,17,-155,-156,-157,17,17,17,17,17,17,17,17,17,17,17,17,17,17,62,64,-152,65,17,17,17,17,17,17,-146,-147,-148,-149,-150,-151,17,17,17,-153,-140,-141,-142,-143,-144,-145,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,210,212,218,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,4,4,17,62,313,314,315,316,317,17,17,17,17,17,376,377,378,379,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'IF':([0,32,126,219,220,221,297,],[5,5,5,5,5,5,5,]),'WHILE':([0,32,126,219,220,221,297,],[6,6,6,6,6,6,6,]),'FOR':([0,32,126,219,220,221,297,],[8,8,8,8,8,8,8,]),'FUNCTION':([0,32,126,219,220,221,297,],[10,10,10,10,10,10,10,]),'CLASS':([0,32,126,219,220,221,297,],[11,11,11,11,11,11,11,]),'BUILD':([0,32,126,219,220,221,297,],[12,12,12,12,12,12,12,]),'-':([0,2,3,4,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,212,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,295,297,310,312,328,329,330,331,332,337,338,339,340,341,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,],[7,7,26,-157,7,-154,7,7,7,7,-155,-156,26,-157,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-152,26,26,26,26,7,7,7,7,7,7,26,26,26,26,26,26,26,-146,-147,-148,-149,-150,-151,26,26,-157,7,7,7,-153,26,26,26,26,26,26,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,7,26,26,26,26,26,26,7,26,26,26,26,26,26,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,26,-157,-157,7,7,7,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,7,7,26,26,7,7,7,7,7,347,353,359,365,371,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,7,7,7,7,449,455,461,467,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,]),'(':([0,2,7,10,11,12,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,40,41,42,43,44,45,66,67,68,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,97,98,99,100,101,102,119,126,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,219,220,221,295,297,328,329,330,331,332,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,410,411,412,413,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'NUMBER':([0,2,7,10,11,12,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,40,41,42,43,44,45,66,67,68,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,97,98,99,100,101,102,119,126,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,219,220,221,295,297,303,304,305,306,328,329,330,331,332,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,410,411,412,413,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,318,319,320,321,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'ARRAY':([0,2,7,10,11,12,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,40,41,42,43,44,45,66,67,68,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,97,98,99,100,101,102,119,126,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,219,220,221,295,297,328,329,330,331,332,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,410,411,412,413,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'STRING':([0,2,7,10,11,12,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,40,41,42,43,44,45,66,67,68,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,97,98,99,100,101,102,119,126,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,219,220,221,295,297,328,329,330,331,332,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,410,411,412,413,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'$end':([1,3,4,9,14,15,16,17,34,46,47,48,49,50,51,52,53,54,55,56,57,58,59,69,70,71,72,73,74,75,208,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,322,323,324,325,326,327,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,],[0,-139,-157,-154,-155,-156,-1,-157,-152,-4,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-2,-153,-140,-141,-142,-143,-144,-145,-3,-64,-65,-66,-67,-68,-69,-100,-101,-102,-103,-104,-105,-71,-70,-72,-73,-74,-75,-107,-106,-108,-109,-110,-111,-78,-76,-77,-79,-80,-81,-114,-112,-113,-115,-116,-117,-85,-82,-83,-84,-86,-87,-121,-118,-119,-120,-122,-123,-92,-88,-89,-90,-91,-93,-128,-124,-125,-126,-127,-129,-99,-94,-95,-96,-97,-98,-135,-130,-131,-132,-133,-134,-5,-9,-136,-137,-138,-6,-8,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,]),'IN':([3,4,9,14,15,17,34,47,48,49,50,51,52,53,54,55,56,57,58,61,62,69,70,71,72,73,74,75,120,121,122,123,124,125,212,312,],[18,-157,-154,-155,-156,-157,-152,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,18,-157,-153,-140,-141,-142,-143,-144,-145,-140,-141,-142,-143,-144,-145,-157,18,]),'L':([3,4,9,14,15,16,17,34,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,64,69,70,71,72,73,74,75,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,127,128,129,130,131,132,209,210,212,218,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,310,312,337,338,339,340,341,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,444,445,446,447,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,],[19,-157,-154,-155,-156,40,-157,-152,40,40,40,40,40,40,40,40,40,40,40,-146,-147,-148,-149,-150,-151,40,90,-157,97,-153,40,40,40,40,40,40,40,40,40,136,142,149,155,161,167,173,179,185,191,197,203,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-157,-157,303,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,90,40,40,40,40,40,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,40,40,40,40,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,]),'G':([3,4,9,14,15,16,17,34,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,64,69,70,71,72,73,74,75,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,127,128,129,130,131,132,209,210,212,218,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,310,312,337,338,339,340,341,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,444,445,446,447,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,],[20,-157,-154,-155,-156,41,-157,-152,41,41,41,41,41,41,41,41,41,41,41,-146,-147,-148,-149,-150,-151,41,91,-157,98,-153,41,41,41,41,41,41,41,41,41,137,143,148,154,162,168,174,180,186,192,198,204,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-157,-157,304,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,91,41,41,41,41,41,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,41,41,41,41,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,]),'GE':([3,4,9,14,15,16,17,34,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,64,69,70,71,72,73,74,75,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,127,128,129,130,131,132,209,210,212,218,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,310,312,337,338,339,340,341,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,444,445,446,447,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,],[21,-157,-154,-155,-156,42,-157,-152,42,42,42,42,42,42,42,42,42,42,42,-146,-147,-148,-149,-150,-151,42,92,-157,99,-153,42,42,42,42,42,42,42,42,42,138,144,150,156,160,166,175,181,187,193,199,205,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-157,-157,305,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,92,42,42,42,42,42,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,42,42,42,42,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,]),'LE':([3,4,9,14,15,16,17,34,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,64,69,70,71,72,73,74,75,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,127,128,129,130,131,132,209,210,212,218,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,310,312,337,338,339,340,341,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,444,445,446,447,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,],[22,-157,-154,-155,-156,43,-157,-152,43,43,43,43,43,43,43,43,43,43,43,-146,-147,-148,-149,-150,-151,43,93,-157,100,-153,43,43,43,43,43,43,43,43,43,139,145,151,157,163,169,172,178,188,194,200,206,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-157,-157,306,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,93,43,43,43,43,43,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,43,43,43,43,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,]),'EQ':([3,4,9,14,15,16,17,34,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,69,70,71,72,73,74,75,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,127,128,129,130,131,132,209,210,212,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,310,312,337,338,339,340,341,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,444,445,446,447,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,],[23,-157,-154,-155,-156,44,-157,-152,44,44,44,44,44,44,44,44,44,44,44,-146,-147,-148,-149,-150,-151,44,94,-157,-153,44,44,44,44,44,44,44,44,44,140,146,152,158,164,170,176,182,184,190,201,207,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-157,-157,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,94,44,44,44,44,44,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,44,44,44,44,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,]),'NE':([3,4,9,14,15,16,17,34,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,64,69,70,71,72,73,74,75,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,127,128,129,130,131,132,209,210,212,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,310,312,337,338,339,340,341,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,444,445,446,447,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,],[24,-157,-154,-155,-156,45,-157,-152,45,45,45,45,45,45,45,45,45,45,45,-146,-147,-148,-149,-150,-151,45,95,-157,101,-153,45,45,45,45,45,45,45,45,45,141,147,153,159,165,171,177,183,189,195,196,202,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-157,-157,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,95,45,45,45,45,45,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,45,45,45,45,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,]),'RBRACE':([3,4,9,14,15,16,17,34,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,69,70,71,72,73,74,75,120,121,122,123,124,125,208,209,210,211,212,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,307,308,309,310,311,312,322,323,324,325,326,327,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,],[-139,-157,-154,-155,-156,-1,-157,-152,-4,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-2,-157,-153,-140,-141,-142,-143,-144,-145,-140,-141,-142,-143,-144,-145,-3,294,-157,296,-157,-64,-65,-66,-67,-68,-69,-100,-101,-102,-103,-104,-105,-71,-70,-72,-73,-74,-75,-107,-106,-108,-109,-110,-111,-78,-76,-77,-79,-80,-81,-114,-112,-113,-115,-116,-117,-85,-82,-83,-84,-86,-87,-121,-118,-119,-120,-122,-123,-92,-88,-89,-90,-91,-93,-128,-124,-125,-126,-127,-129,-99,-94,-95,-96,-97,-98,-135,-130,-131,-132,-133,-134,-5,-9,322,323,324,325,326,327,-136,-137,-138,-6,-8,-7,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,]),'+':([3,4,9,14,15,16,17,34,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,69,70,71,72,73,74,75,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,127,128,129,130,131,132,209,210,212,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,310,312,337,338,339,340,341,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,444,445,446,447,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,],[25,-157,-154,-155,-156,25,-157,-152,25,25,25,25,25,25,25,25,25,25,25,-146,-147,-148,-149,-150,-151,25,25,-157,-153,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-157,-157,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,346,352,358,364,370,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,448,454,460,466,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,-146,-147,-148,-149,-150,-151,]),'*':([3,4,9,14,15,16,17,34,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,69,70,71,72,73,74,75,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,127,128,129,130,131,132,209,210,212,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,310,312,337,338,339,340,341,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,444,445,446,447,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,],[27,-157,-154,-155,-156,27,-157,-152,27,27,27,27,27,27,27,27,27,27,27,27,27,-148,-149,-150,-151,27,27,-157,-153,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-157,-157,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,348,354,360,366,372,27,27,-148,-149,-150,-151,27,27,-148,-149,-150,-151,27,27,-148,-149,-150,-151,27,27,-148,-149,-150,-151,27,27,-148,-149,-150,-151,450,456,462,468,27,27,-148,-149,-150,-151,27,27,-148,-149,-150,-151,27,27,-148,-149,-150,-151,27,27,-148,-149,-150,-151,]),'/':([3,4,9,14,15,16,17,34,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,69,70,71,72,73,74,75,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,127,128,129,130,131,132,209,210,212,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,310,312,337,338,339,340,341,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,444,445,446,447,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,],[28,-157,-154,-155,-156,28,-157,-152,28,28,28,28,28,28,28,28,28,28,28,28,28,-148,-149,-150,-151,28,28,-157,-153,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-157,-157,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,349,355,361,367,373,28,28,-148,-149,-150,-151,28,28,-148,-149,-150,-151,28,28,-148,-149,-150,-151,28,28,-148,-149,-150,-151,28,28,-148,-149,-150,-151,451,457,463,469,28,28,-148,-149,-150,-151,28,28,-148,-149,-150,-151,28,28,-148,-149,-150,-151,28,28,-148,-149,-150,-151,]),'^':([3,4,9,14,15,16,17,34,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,69,70,71,72,73,74,75,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,127,128,129,130,131,132,209,210,212,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,310,312,337,338,339,340,341,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,444,445,446,447,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,],[29,-157,-154,-155,-156,29,-157,-152,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-150,-151,29,29,-157,-153,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-157,-157,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,350,356,362,368,374,29,29,29,29,-150,-151,29,29,29,29,-150,-151,29,29,29,29,-150,-151,29,29,29,29,-150,-151,29,29,29,29,-150,-151,452,458,464,470,29,29,29,29,-150,-151,29,29,29,29,-150,-151,29,29,29,29,-150,-151,29,29,29,29,-150,-151,]),'%':([3,4,9,14,15,16,17,34,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,69,70,71,72,73,74,75,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,127,128,129,130,131,132,209,210,212,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,310,312,337,338,339,340,341,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,444,445,446,447,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,],[30,-157,-154,-155,-156,30,-157,-152,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-150,-151,30,30,-157,-153,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-157,-157,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,351,357,363,369,375,30,30,30,30,-150,-151,30,30,30,30,-150,-151,30,30,30,30,-150,-151,30,30,30,30,-150,-151,30,30,30,30,-150,-151,453,459,465,471,30,30,30,30,-150,-151,30,30,30,30,-150,-151,30,30,30,30,-150,-151,30,30,30,30,-150,-151,]),'=':([4,62,65,210,212,313,314,315,316,317,376,377,378,379,],[31,31,102,295,297,328,329,330,331,332,410,411,412,413,]),'LPAREN':([5,6,8,9,14,15,17,34,36,37,38,53,54,55,56,57,58,60,69,70,71,72,73,74,75,],[32,33,35,-154,-155,-156,-157,-152,66,67,68,-146,-147,-148,-149,-150,-151,88,-153,-140,-141,-142,-143,-144,-145,]),'RPAREN':([9,14,15,16,17,34,46,53,54,55,56,57,58,59,61,62,63,69,70,71,72,73,74,75,103,104,105,118,120,121,122,123,124,125,127,128,129,130,131,208,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,318,319,320,321,322,323,324,325,326,327,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,],[-154,-155,-156,-1,-157,-152,-4,-146,-147,-148,-149,-150,-151,-2,89,-157,96,-153,-140,-141,-142,-143,-144,-145,133,134,135,208,-140,-141,-142,-143,-144,-145,213,214,215,216,217,-3,-64,-65,-66,-67,-68,-69,-100,-101,-102,-103,-104,-105,-71,-70,-72,-73,-74,-75,-107,-106,-108,-109,-110,-111,-78,-76,-77,-79,-80,-81,-114,-112,-113,-115,-116,-117,-85,-82,-83,-84,-86,-87,-121,-118,-119,-120,-122,-123,-92,-88,-89,-90,-91,-93,-128,-124,-125,-126,-127,-129,-99,-94,-95,-96,-97,-98,-135,-130,-131,-132,-133,-134,-5,-9,333,334,335,336,-136,-137,-138,-6,-8,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,]),')':([9,14,15,17,34,39,53,54,55,56,57,58,69,70,71,72,73,74,75,],[-154,-155,-156,-157,-152,69,-146,-147,-148,-149,-150,-151,-153,-140,-141,-142,-143,-144,-145,]),'AND':([9,14,15,17,34,47,48,49,50,51,52,53,54,55,56,57,58,69,70,71,72,73,74,75,120,121,122,123,124,125,],[-154,-155,-156,-157,-152,76,78,80,82,84,86,-146,-147,-148,-149,-150,-151,-153,-140,-141,-142,-143,-144,-145,76,78,80,82,84,86,]),'OR':([9,14,15,17,34,47,48,49,50,51,52,53,54,55,56,57,58,69,70,71,72,73,74,75,120,121,122,123,124,125,],[-154,-155,-156,-157,-152,77,79,81,83,85,87,-146,-147,-148,-149,-150,-151,-153,-140,-141,-142,-143,-144,-145,77,79,81,83,85,87,]),'INPUT':([31,297,],[60,60,]),'LBRACE':([89,96,133,134,135,213,214,215,216,217,333,334,335,336,],[119,126,219,220,221,298,299,300,301,302,342,343,344,345,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,32,126,219,220,221,297,],[1,63,211,307,308,309,311,]),'expression':([0,2,7,10,11,12,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,40,41,42,43,44,45,66,67,68,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,97,98,99,100,101,102,119,126,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,219,220,221,295,297,328,329,330,331,332,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,410,411,412,413,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,],[3,16,34,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,70,71,72,73,74,75,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,127,128,129,130,131,132,209,3,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,3,3,3,310,312,337,338,339,340,341,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,444,445,446,447,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> PRINT expression','statement',2,'p_print','sapphire.py',109),
  ('statement -> NAME = expression','statement',3,'p_statement_assign','sapphire.py',112),
  ('statement -> NAME = INPUT LPAREN expression RPAREN','statement',6,'p_input_assign','sapphire.py',118),
  ('statement -> expression IN expression','statement',3,'p_in_comparison','sapphire.py',131),
  ('statement -> IF LPAREN expression RPAREN LBRACE expression RBRACE','statement',7,'p_if_loop','sapphire.py',146),
  ('statement -> IF LPAREN expression RPAREN LBRACE NAME = expression RBRACE','statement',9,'p_if_loop','sapphire.py',147),
  ('statement -> IF LPAREN statement RPAREN LBRACE NAME = expression RBRACE','statement',9,'p_if_loop','sapphire.py',148),
  ('statement -> IF LPAREN statement RPAREN LBRACE NAME = statement RBRACE','statement',9,'p_if_loop','sapphire.py',149),
  ('statement -> IF LPAREN statement RPAREN LBRACE statement RBRACE','statement',7,'p_if_loop','sapphire.py',150),
  ('statement -> WHILE LPAREN NAME L expression RPAREN LBRACE NAME = expression + expression RBRACE','statement',13,'p_while_loop','sapphire.py',158),
  ('statement -> WHILE LPAREN NAME L expression RPAREN LBRACE NAME = expression - expression RBRACE','statement',13,'p_while_loop','sapphire.py',159),
  ('statement -> WHILE LPAREN NAME L expression RPAREN LBRACE NAME = expression * expression RBRACE','statement',13,'p_while_loop','sapphire.py',160),
  ('statement -> WHILE LPAREN NAME L expression RPAREN LBRACE NAME = expression / expression RBRACE','statement',13,'p_while_loop','sapphire.py',161),
  ('statement -> WHILE LPAREN NAME L expression RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',13,'p_while_loop','sapphire.py',162),
  ('statement -> WHILE LPAREN NAME L expression RPAREN LBRACE NAME = expression % expression RBRACE','statement',13,'p_while_loop','sapphire.py',163),
  ('statement -> WHILE LPAREN NAME G expression RPAREN LBRACE NAME = expression + expression RBRACE','statement',13,'p_while_loop','sapphire.py',164),
  ('statement -> WHILE LPAREN NAME G expression RPAREN LBRACE NAME = expression - expression RBRACE','statement',13,'p_while_loop','sapphire.py',165),
  ('statement -> WHILE LPAREN NAME G expression RPAREN LBRACE NAME = expression * expression RBRACE','statement',13,'p_while_loop','sapphire.py',166),
  ('statement -> WHILE LPAREN NAME G expression RPAREN LBRACE NAME = expression / expression RBRACE','statement',13,'p_while_loop','sapphire.py',167),
  ('statement -> WHILE LPAREN NAME G expression RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',13,'p_while_loop','sapphire.py',168),
  ('statement -> WHILE LPAREN NAME G expression RPAREN LBRACE NAME = expression % expression RBRACE','statement',13,'p_while_loop','sapphire.py',169),
  ('statement -> WHILE LPAREN NAME GE expression RPAREN LBRACE NAME = expression + expression RBRACE','statement',13,'p_while_loop','sapphire.py',170),
  ('statement -> WHILE LPAREN NAME GE expression RPAREN LBRACE NAME = expression - expression RBRACE','statement',13,'p_while_loop','sapphire.py',171),
  ('statement -> WHILE LPAREN NAME GE expression RPAREN LBRACE NAME = expression * expression RBRACE','statement',13,'p_while_loop','sapphire.py',172),
  ('statement -> WHILE LPAREN NAME GE expression RPAREN LBRACE NAME = expression / expression RBRACE','statement',13,'p_while_loop','sapphire.py',173),
  ('statement -> WHILE LPAREN NAME GE expression RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',13,'p_while_loop','sapphire.py',174),
  ('statement -> WHILE LPAREN NAME GE expression RPAREN LBRACE NAME = expression % expression RBRACE','statement',13,'p_while_loop','sapphire.py',175),
  ('statement -> WHILE LPAREN NAME LE expression RPAREN LBRACE NAME = expression + expression RBRACE','statement',13,'p_while_loop','sapphire.py',176),
  ('statement -> WHILE LPAREN NAME LE expression RPAREN LBRACE NAME = expression - expression RBRACE','statement',13,'p_while_loop','sapphire.py',177),
  ('statement -> WHILE LPAREN NAME LE expression RPAREN LBRACE NAME = expression * expression RBRACE','statement',13,'p_while_loop','sapphire.py',178),
  ('statement -> WHILE LPAREN NAME LE expression RPAREN LBRACE NAME = expression / expression RBRACE','statement',13,'p_while_loop','sapphire.py',179),
  ('statement -> WHILE LPAREN NAME LE expression RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',13,'p_while_loop','sapphire.py',180),
  ('statement -> WHILE LPAREN NAME LE expression RPAREN LBRACE NAME = expression % expression RBRACE','statement',13,'p_while_loop','sapphire.py',181),
  ('statement -> WHILE LPAREN NAME NE expression RPAREN LBRACE NAME = expression + expression RBRACE','statement',13,'p_while_loop','sapphire.py',182),
  ('statement -> WHILE LPAREN NAME NE expression RPAREN LBRACE NAME = expression - expression RBRACE','statement',13,'p_while_loop','sapphire.py',183),
  ('statement -> WHILE LPAREN NAME NE expression RPAREN LBRACE NAME = expression * expression RBRACE','statement',13,'p_while_loop','sapphire.py',184),
  ('statement -> WHILE LPAREN NAME NE expression RPAREN LBRACE NAME = expression / expression RBRACE','statement',13,'p_while_loop','sapphire.py',185),
  ('statement -> WHILE LPAREN NAME NE expression RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',13,'p_while_loop','sapphire.py',186),
  ('statement -> WHILE LPAREN NAME NE expression RPAREN LBRACE NAME = expression % expression RBRACE','statement',13,'p_while_loop','sapphire.py',187),
  ('statement -> FOR LPAREN NAME = expression NAME L NUMBER RPAREN LBRACE NAME = expression + expression RBRACE','statement',16,'p_for_loop','sapphire.py',278),
  ('statement -> FOR LPAREN NAME = expression NAME L NUMBER RPAREN LBRACE NAME = expression - expression RBRACE','statement',16,'p_for_loop','sapphire.py',279),
  ('statement -> FOR LPAREN NAME = expression NAME L NUMBER RPAREN LBRACE NAME = expression * expression RBRACE','statement',16,'p_for_loop','sapphire.py',280),
  ('statement -> FOR LPAREN NAME = expression NAME L NUMBER RPAREN LBRACE NAME = expression / expression RBRACE','statement',16,'p_for_loop','sapphire.py',281),
  ('statement -> FOR LPAREN NAME = expression NAME L NUMBER RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',16,'p_for_loop','sapphire.py',282),
  ('statement -> FOR LPAREN NAME = expression NAME L NUMBER RPAREN LBRACE NAME = expression % expression RBRACE','statement',16,'p_for_loop','sapphire.py',283),
  ('statement -> FOR LPAREN NAME = expression NAME G NUMBER RPAREN LBRACE NAME = expression + expression RBRACE','statement',16,'p_for_loop','sapphire.py',284),
  ('statement -> FOR LPAREN NAME = expression NAME G NUMBER RPAREN LBRACE NAME = expression - expression RBRACE','statement',16,'p_for_loop','sapphire.py',285),
  ('statement -> FOR LPAREN NAME = expression NAME G NUMBER RPAREN LBRACE NAME = expression * expression RBRACE','statement',16,'p_for_loop','sapphire.py',286),
  ('statement -> FOR LPAREN NAME = expression NAME G NUMBER RPAREN LBRACE NAME = expression / expression RBRACE','statement',16,'p_for_loop','sapphire.py',287),
  ('statement -> FOR LPAREN NAME = expression NAME G NUMBER RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',16,'p_for_loop','sapphire.py',288),
  ('statement -> FOR LPAREN NAME = expression NAME G NUMBER RPAREN LBRACE NAME = expression % expression RBRACE','statement',16,'p_for_loop','sapphire.py',289),
  ('statement -> FOR LPAREN NAME = expression NAME GE NUMBER RPAREN LBRACE NAME = expression + expression RBRACE','statement',16,'p_for_loop','sapphire.py',290),
  ('statement -> FOR LPAREN NAME = expression NAME GE NUMBER RPAREN LBRACE NAME = expression - expression RBRACE','statement',16,'p_for_loop','sapphire.py',291),
  ('statement -> FOR LPAREN NAME = expression NAME GE NUMBER RPAREN LBRACE NAME = expression * expression RBRACE','statement',16,'p_for_loop','sapphire.py',292),
  ('statement -> FOR LPAREN NAME = expression NAME GE NUMBER RPAREN LBRACE NAME = expression / expression RBRACE','statement',16,'p_for_loop','sapphire.py',293),
  ('statement -> FOR LPAREN NAME = expression NAME GE NUMBER RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',16,'p_for_loop','sapphire.py',294),
  ('statement -> FOR LPAREN NAME = expression NAME GE NUMBER RPAREN LBRACE NAME = expression % expression RBRACE','statement',16,'p_for_loop','sapphire.py',295),
  ('statement -> FOR LPAREN NAME = expression NAME LE NUMBER RPAREN LBRACE NAME = expression + expression RBRACE','statement',16,'p_for_loop','sapphire.py',296),
  ('statement -> FOR LPAREN NAME = expression NAME LE NUMBER RPAREN LBRACE NAME = expression - expression RBRACE','statement',16,'p_for_loop','sapphire.py',297),
  ('statement -> FOR LPAREN NAME = expression NAME LE NUMBER RPAREN LBRACE NAME = expression * expression RBRACE','statement',16,'p_for_loop','sapphire.py',298),
  ('statement -> FOR LPAREN NAME = expression NAME LE NUMBER RPAREN LBRACE NAME = expression / expression RBRACE','statement',16,'p_for_loop','sapphire.py',299),
  ('statement -> FOR LPAREN NAME = expression NAME LE NUMBER RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',16,'p_for_loop','sapphire.py',300),
  ('statement -> FOR LPAREN NAME = expression NAME LE NUMBER RPAREN LBRACE NAME = expression % expression RBRACE','statement',16,'p_for_loop','sapphire.py',301),
  ('statement -> expression L expression AND expression L expression','statement',7,'p_conditional_and','sapphire.py',363),
  ('statement -> expression L expression AND expression G expression','statement',7,'p_conditional_and','sapphire.py',364),
  ('statement -> expression L expression AND expression GE expression','statement',7,'p_conditional_and','sapphire.py',365),
  ('statement -> expression L expression AND expression LE expression','statement',7,'p_conditional_and','sapphire.py',366),
  ('statement -> expression L expression AND expression EQ expression','statement',7,'p_conditional_and','sapphire.py',367),
  ('statement -> expression L expression AND expression NE expression','statement',7,'p_conditional_and','sapphire.py',368),
  ('statement -> expression G expression AND expression L expression','statement',7,'p_conditional_and','sapphire.py',369),
  ('statement -> expression G expression AND expression G expression','statement',7,'p_conditional_and','sapphire.py',370),
  ('statement -> expression G expression AND expression GE expression','statement',7,'p_conditional_and','sapphire.py',371),
  ('statement -> expression G expression AND expression LE expression','statement',7,'p_conditional_and','sapphire.py',372),
  ('statement -> expression G expression AND expression EQ expression','statement',7,'p_conditional_and','sapphire.py',373),
  ('statement -> expression G expression AND expression NE expression','statement',7,'p_conditional_and','sapphire.py',374),
  ('statement -> expression GE expression AND expression L expression','statement',7,'p_conditional_and','sapphire.py',375),
  ('statement -> expression GE expression AND expression G expression','statement',7,'p_conditional_and','sapphire.py',376),
  ('statement -> expression GE expression AND expression GE expression','statement',7,'p_conditional_and','sapphire.py',377),
  ('statement -> expression GE expression AND expression LE expression','statement',7,'p_conditional_and','sapphire.py',378),
  ('statement -> expression GE expression AND expression EQ expression','statement',7,'p_conditional_and','sapphire.py',379),
  ('statement -> expression GE expression AND expression NE expression','statement',7,'p_conditional_and','sapphire.py',380),
  ('statement -> expression LE expression AND expression L expression','statement',7,'p_conditional_and','sapphire.py',381),
  ('statement -> expression LE expression AND expression G expression','statement',7,'p_conditional_and','sapphire.py',382),
  ('statement -> expression LE expression AND expression GE expression','statement',7,'p_conditional_and','sapphire.py',383),
  ('statement -> expression LE expression AND expression LE expression','statement',7,'p_conditional_and','sapphire.py',384),
  ('statement -> expression LE expression AND expression EQ expression','statement',7,'p_conditional_and','sapphire.py',385),
  ('statement -> expression LE expression AND expression NE expression','statement',7,'p_conditional_and','sapphire.py',386),
  ('statement -> expression EQ expression AND expression L expression','statement',7,'p_conditional_and','sapphire.py',387),
  ('statement -> expression EQ expression AND expression G expression','statement',7,'p_conditional_and','sapphire.py',388),
  ('statement -> expression EQ expression AND expression GE expression','statement',7,'p_conditional_and','sapphire.py',389),
  ('statement -> expression EQ expression AND expression LE expression','statement',7,'p_conditional_and','sapphire.py',390),
  ('statement -> expression EQ expression AND expression EQ expression','statement',7,'p_conditional_and','sapphire.py',391),
  ('statement -> expression EQ expression AND expression NE expression','statement',7,'p_conditional_and','sapphire.py',392),
  ('statement -> expression NE expression AND expression L expression','statement',7,'p_conditional_and','sapphire.py',393),
  ('statement -> expression NE expression AND expression G expression','statement',7,'p_conditional_and','sapphire.py',394),
  ('statement -> expression NE expression AND expression GE expression','statement',7,'p_conditional_and','sapphire.py',395),
  ('statement -> expression NE expression AND expression LE expression','statement',7,'p_conditional_and','sapphire.py',396),
  ('statement -> expression NE expression AND expression EQ expression','statement',7,'p_conditional_and','sapphire.py',397),
  ('statement -> expression NE expression AND expression NE expression','statement',7,'p_conditional_and','sapphire.py',398),
  ('statement -> expression L expression OR expression L expression','statement',7,'p_conditional_or','sapphire.py',443),
  ('statement -> expression L expression OR expression G expression','statement',7,'p_conditional_or','sapphire.py',444),
  ('statement -> expression L expression OR expression GE expression','statement',7,'p_conditional_or','sapphire.py',445),
  ('statement -> expression L expression OR expression LE expression','statement',7,'p_conditional_or','sapphire.py',446),
  ('statement -> expression L expression OR expression EQ expression','statement',7,'p_conditional_or','sapphire.py',447),
  ('statement -> expression L expression OR expression NE expression','statement',7,'p_conditional_or','sapphire.py',448),
  ('statement -> expression G expression OR expression L expression','statement',7,'p_conditional_or','sapphire.py',449),
  ('statement -> expression G expression OR expression G expression','statement',7,'p_conditional_or','sapphire.py',450),
  ('statement -> expression G expression OR expression GE expression','statement',7,'p_conditional_or','sapphire.py',451),
  ('statement -> expression G expression OR expression LE expression','statement',7,'p_conditional_or','sapphire.py',452),
  ('statement -> expression G expression OR expression EQ expression','statement',7,'p_conditional_or','sapphire.py',453),
  ('statement -> expression G expression OR expression NE expression','statement',7,'p_conditional_or','sapphire.py',454),
  ('statement -> expression GE expression OR expression L expression','statement',7,'p_conditional_or','sapphire.py',455),
  ('statement -> expression GE expression OR expression G expression','statement',7,'p_conditional_or','sapphire.py',456),
  ('statement -> expression GE expression OR expression GE expression','statement',7,'p_conditional_or','sapphire.py',457),
  ('statement -> expression GE expression OR expression LE expression','statement',7,'p_conditional_or','sapphire.py',458),
  ('statement -> expression GE expression OR expression EQ expression','statement',7,'p_conditional_or','sapphire.py',459),
  ('statement -> expression GE expression OR expression NE expression','statement',7,'p_conditional_or','sapphire.py',460),
  ('statement -> expression LE expression OR expression L expression','statement',7,'p_conditional_or','sapphire.py',461),
  ('statement -> expression LE expression OR expression G expression','statement',7,'p_conditional_or','sapphire.py',462),
  ('statement -> expression LE expression OR expression GE expression','statement',7,'p_conditional_or','sapphire.py',463),
  ('statement -> expression LE expression OR expression LE expression','statement',7,'p_conditional_or','sapphire.py',464),
  ('statement -> expression LE expression OR expression EQ expression','statement',7,'p_conditional_or','sapphire.py',465),
  ('statement -> expression LE expression OR expression NE expression','statement',7,'p_conditional_or','sapphire.py',466),
  ('statement -> expression EQ expression OR expression L expression','statement',7,'p_conditional_or','sapphire.py',467),
  ('statement -> expression EQ expression OR expression G expression','statement',7,'p_conditional_or','sapphire.py',468),
  ('statement -> expression EQ expression OR expression GE expression','statement',7,'p_conditional_or','sapphire.py',469),
  ('statement -> expression EQ expression OR expression LE expression','statement',7,'p_conditional_or','sapphire.py',470),
  ('statement -> expression EQ expression OR expression EQ expression','statement',7,'p_conditional_or','sapphire.py',471),
  ('statement -> expression EQ expression OR expression NE expression','statement',7,'p_conditional_or','sapphire.py',472),
  ('statement -> expression NE expression OR expression L expression','statement',7,'p_conditional_or','sapphire.py',473),
  ('statement -> expression NE expression OR expression G expression','statement',7,'p_conditional_or','sapphire.py',474),
  ('statement -> expression NE expression OR expression GE expression','statement',7,'p_conditional_or','sapphire.py',475),
  ('statement -> expression NE expression OR expression LE expression','statement',7,'p_conditional_or','sapphire.py',476),
  ('statement -> expression NE expression OR expression EQ expression','statement',7,'p_conditional_or','sapphire.py',477),
  ('statement -> expression NE expression OR expression NE expression','statement',7,'p_conditional_or','sapphire.py',478),
  ('statement -> FUNCTION expression LPAREN expression RPAREN LBRACE statement RBRACE','statement',8,'p_function_def','sapphire.py',523),
  ('statement -> CLASS expression LPAREN expression RPAREN LBRACE statement RBRACE','statement',8,'p_class_def','sapphire.py',526),
  ('statement -> BUILD expression LPAREN expression RPAREN LBRACE statement RBRACE','statement',8,'p_build_def','sapphire.py',529),
  ('statement -> expression','statement',1,'p_statement_expr','sapphire.py',532),
  ('expression -> expression L expression','expression',3,'p_bool_cond','sapphire.py',537),
  ('expression -> expression G expression','expression',3,'p_bool_cond','sapphire.py',538),
  ('expression -> expression GE expression','expression',3,'p_bool_cond','sapphire.py',539),
  ('expression -> expression LE expression','expression',3,'p_bool_cond','sapphire.py',540),
  ('expression -> expression EQ expression','expression',3,'p_bool_cond','sapphire.py',541),
  ('expression -> expression NE expression','expression',3,'p_bool_cond','sapphire.py',542),
  ('expression -> expression + expression','expression',3,'p_expression_binop','sapphire.py',564),
  ('expression -> expression - expression','expression',3,'p_expression_binop','sapphire.py',565),
  ('expression -> expression * expression','expression',3,'p_expression_binop','sapphire.py',566),
  ('expression -> expression / expression','expression',3,'p_expression_binop','sapphire.py',567),
  ('expression -> expression ^ expression','expression',3,'p_expression_binop','sapphire.py',568),
  ('expression -> expression % expression','expression',3,'p_expression_binop','sapphire.py',569),
  ('expression -> - expression','expression',2,'p_expression_uminus','sapphire.py',586),
  ('expression -> ( expression )','expression',3,'p_expression_group','sapphire.py',590),
  ('expression -> NUMBER','expression',1,'p_expression_number','sapphire.py',595),
  ('expression -> ARRAY','expression',1,'p_expression_array','sapphire.py',598),
  ('expression -> STRING','expression',1,'p_expression_string','sapphire.py',605),
  ('expression -> NAME','expression',1,'p_expression_name','sapphire.py',610),
]
