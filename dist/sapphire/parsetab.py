
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-left*/left^%rightUMINUSAND ARRAY BUILD CLASS EQ FOR FUNCTION G GE IF IN INPUT L LBRACE LE LPAREN NAME NE NUMBER OR RBRACE RPAREN STRING WHILEstatement : NAME "=" expressionstatement : NAME "=" INPUT LPAREN expression RPARENstatement : expression IN expressionstatement : IF LPAREN expression RPAREN LBRACE expression RBRACE\n\t\t|  IF LPAREN expression RPAREN LBRACE NAME "=" expression RBRACE\n\t\t|  IF LPAREN statement RPAREN LBRACE NAME "=" expression RBRACE\n\t\t|  IF LPAREN statement RPAREN LBRACE NAME "=" statement RBRACEstatement : WHILE LPAREN NAME L expression RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t| WHILE LPAREN NAME L expression RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t| WHILE LPAREN NAME L expression RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t| WHILE LPAREN NAME L expression RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t| WHILE LPAREN NAME L expression RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t| WHILE LPAREN NAME L expression RPAREN LBRACE NAME "=" expression "%" expression RBRACE\n\t| WHILE LPAREN NAME G expression RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t| WHILE LPAREN NAME G expression RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t| WHILE LPAREN NAME G expression RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t| WHILE LPAREN NAME G expression RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t| WHILE LPAREN NAME G expression RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t| WHILE LPAREN NAME G expression RPAREN LBRACE NAME "=" expression "%" expression RBRACE\n\t| WHILE LPAREN NAME GE expression RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t| WHILE LPAREN NAME GE expression RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t| WHILE LPAREN NAME GE expression RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t| WHILE LPAREN NAME GE expression RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t| WHILE LPAREN NAME GE expression RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t| WHILE LPAREN NAME GE expression RPAREN LBRACE NAME "=" expression "%" expression RBRACE\n\t| WHILE LPAREN NAME LE expression RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t| WHILE LPAREN NAME LE expression RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t| WHILE LPAREN NAME LE expression RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t| WHILE LPAREN NAME LE expression RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t| WHILE LPAREN NAME LE expression RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t| WHILE LPAREN NAME LE expression RPAREN LBRACE NAME "=" expression "%" expression RBRACE\n\t| WHILE LPAREN NAME NE expression RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t| WHILE LPAREN NAME NE expression RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t| WHILE LPAREN NAME NE expression RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t| WHILE LPAREN NAME NE expression RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t| WHILE LPAREN NAME NE expression RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t| WHILE LPAREN NAME NE expression RPAREN LBRACE NAME "=" expression "%" expression RBRACEstatement : FOR LPAREN NAME "=" expression NAME L NUMBER  RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t             | FOR LPAREN NAME "=" expression NAME L NUMBER  RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME L NUMBER  RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME L NUMBER  RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME L NUMBER  RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME L NUMBER  RPAREN LBRACE NAME "=" expression "%" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME G NUMBER  RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME G NUMBER  RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME G NUMBER  RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME G NUMBER  RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME G NUMBER  RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME G NUMBER  RPAREN LBRACE NAME "=" expression "%" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME GE NUMBER  RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME GE NUMBER  RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME GE NUMBER  RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME GE NUMBER  RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME GE NUMBER  RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME GE NUMBER  RPAREN LBRACE NAME "=" expression "%" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME LE NUMBER  RPAREN LBRACE NAME "=" expression "+" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME LE NUMBER  RPAREN LBRACE NAME "=" expression "-" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME LE NUMBER  RPAREN LBRACE NAME "=" expression "*" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME LE NUMBER  RPAREN LBRACE NAME "=" expression "/" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME LE NUMBER  RPAREN LBRACE NAME "=" expression "^" expression RBRACE\n\t\t\t\t | FOR LPAREN NAME "=" expression NAME LE NUMBER  RPAREN LBRACE NAME "=" expression "%" expression RBRACEstatement : expression L expression AND expression L expression\n    \t\t\t  | expression L expression AND expression G expression\n    \t\t\t  | expression L expression AND expression GE expression\n    \t\t\t  | expression L expression AND expression LE expression\n    \t\t\t  | expression L expression AND expression EQ expression\n    \t\t\t  | expression L expression AND expression NE expression\n                  | expression G expression AND expression L expression\n    \t\t\t  | expression G expression AND expression G expression\n    \t\t\t  | expression G expression AND expression GE expression\n    \t\t\t  | expression G expression AND expression LE expression\n    \t\t\t  | expression G expression AND expression EQ expression\n    \t\t\t  | expression G expression AND expression NE expression\n    \t\t\t  | expression GE expression AND expression L expression\n    \t\t\t  | expression GE expression AND expression G expression\n    \t\t\t  | expression GE expression AND expression GE expression\n    \t\t\t  | expression GE expression AND expression LE expression\n    \t\t\t  | expression GE expression AND expression EQ expression\n    \t\t\t  | expression GE expression AND expression NE expression\n    \t\t\t  | expression LE expression AND expression L expression\n    \t\t\t  | expression LE expression AND expression G expression\n    \t\t\t  | expression LE expression AND expression GE expression\n    \t\t\t  | expression LE expression AND expression LE expression\n    \t\t\t  | expression LE expression AND expression EQ expression\n    \t\t\t  | expression LE expression AND expression NE expression\n    \t\t\t  | expression EQ expression AND expression L expression\n    \t\t\t  | expression EQ expression AND expression G expression\n    \t\t\t  | expression EQ expression AND expression GE expression\n    \t\t\t  | expression EQ expression AND expression LE expression\n    \t\t\t  | expression EQ expression AND expression EQ expression\n    \t\t\t  | expression EQ expression AND expression NE expression\n    \t\t\t  | expression NE expression AND expression L expression\n    \t\t\t  | expression NE expression AND expression G expression\n    \t\t\t  | expression NE expression AND expression GE expression\n    \t\t\t  | expression NE expression AND expression LE expression\n    \t\t\t  | expression NE expression AND expression EQ expression\n    \t\t\t  | expression NE expression AND expression NE expressionstatement : expression L expression OR expression L expression\n    \t\t\t  | expression L expression OR expression G expression\n    \t\t\t  | expression L expression OR expression GE expression\n    \t\t\t  | expression L expression OR expression LE expression\n    \t\t\t  | expression L expression OR expression EQ expression\n    \t\t\t  | expression L expression OR expression NE expression\n                  | expression G expression OR expression L expression\n    \t\t\t  | expression G expression OR expression G expression\n    \t\t\t  | expression G expression OR expression GE expression\n    \t\t\t  | expression G expression OR expression LE expression\n    \t\t\t  | expression G expression OR expression EQ expression\n    \t\t\t  | expression G expression OR expression NE expression\n    \t\t\t  | expression GE expression OR expression L expression\n    \t\t\t  | expression GE expression OR expression G expression\n    \t\t\t  | expression GE expression OR expression GE expression\n    \t\t\t  | expression GE expression OR expression LE expression\n    \t\t\t  | expression GE expression OR expression EQ expression\n    \t\t\t  | expression GE expression OR expression NE expression\n    \t\t\t  | expression LE expression OR expression L expression\n    \t\t\t  | expression LE expression OR expression G expression\n    \t\t\t  | expression LE expression OR expression GE expression\n    \t\t\t  | expression LE expression OR expression LE expression\n    \t\t\t  | expression LE expression OR expression EQ expression\n    \t\t\t  | expression LE expression OR expression NE expression\n    \t\t\t  | expression EQ expression OR expression L expression\n    \t\t\t  | expression EQ expression OR expression G expression\n    \t\t\t  | expression EQ expression OR expression GE expression\n    \t\t\t  | expression EQ expression OR expression LE expression\n    \t\t\t  | expression EQ expression OR expression EQ expression\n    \t\t\t  | expression EQ expression OR expression NE expression\n    \t\t\t  | expression NE expression OR expression L expression\n    \t\t\t  | expression NE expression OR expression G expression\n    \t\t\t  | expression NE expression OR expression GE expression\n    \t\t\t  | expression NE expression OR expression LE expression\n    \t\t\t  | expression NE expression OR expression EQ expression\n    \t\t\t  | expression NE expression OR expression NE expressionstatement : FUNCTION expression LPAREN expression RPAREN LBRACE statement RBRACEstatement : CLASS expression LPAREN expression RPAREN LBRACE statement RBRACEstatement : BUILD expression LPAREN expression RPAREN LBRACE statement RBRACEstatement : expressionexpression : expression L expression\n                   | expression G expression\n                  | expression GE expression\n                  | expression LE expression\n                  | expression EQ expression\n                  | expression NE expressionexpression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression\n                  | expression \'^\' expression\n                  | expression \'%\' expressionexpression : \'-\' expression %prec UMINUSexpression : \'(\' expression \')\'expression : NUMBERexpression : ARRAYexpression : STRINGexpression : NAME'
    
_lr_action_items = {'NAME':([0,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,47,48,49,50,51,52,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,117,124,130,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,216,217,218,292,293,294,295,296,297,298,324,325,326,327,328,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,406,407,408,409,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,],[2,32,-152,32,32,32,32,-153,-154,32,32,32,32,32,32,32,32,32,32,32,32,32,32,54,56,-150,-155,63,-144,-145,-146,-147,-148,-149,32,32,32,32,32,32,32,32,32,-151,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-138,-139,-140,-141,-142,-143,32,208,209,215,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,2,2,2,32,54,309,310,311,312,313,32,32,32,32,32,372,373,374,375,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'IF':([0,29,216,217,218,293,],[4,4,4,4,4,4,]),'WHILE':([0,29,216,217,218,293,],[5,5,5,5,5,5,]),'FOR':([0,29,216,217,218,293,],[7,7,7,7,7,7,]),'FUNCTION':([0,29,216,217,218,293,],[9,9,9,9,9,9,]),'CLASS':([0,29,216,217,218,293,],[10,10,10,10,10,10,]),'BUILD':([0,29,216,217,218,293,],[11,11,11,11,11,11,]),'-':([0,2,3,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,306,308,324,325,326,327,328,333,334,335,336,337,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,],[6,-155,24,6,-152,6,6,6,6,-153,-154,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-150,-155,24,24,24,24,24,24,24,24,24,24,24,24,-144,-145,-146,-147,-148,-149,24,-155,6,6,6,6,6,6,6,6,6,-151,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,24,24,24,24,24,24,6,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,6,24,24,24,24,24,24,24,24,24,24,24,24,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,24,-155,6,6,6,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,6,6,24,24,6,6,6,6,6,343,349,355,361,367,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,6,6,6,6,445,451,457,463,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,]),'(':([0,6,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,57,58,59,60,61,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,100,117,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,216,217,218,292,293,324,325,326,327,328,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,406,407,408,409,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'NUMBER':([0,6,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,57,58,59,60,61,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,100,117,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,216,217,218,292,293,299,300,301,302,324,325,326,327,328,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,406,407,408,409,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,314,315,316,317,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'ARRAY':([0,6,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,57,58,59,60,61,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,100,117,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,216,217,218,292,293,324,325,326,327,328,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,406,407,408,409,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'STRING':([0,6,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,57,58,59,60,61,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,100,117,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,216,217,218,292,293,324,325,326,327,328,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,406,407,408,409,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'$end':([1,2,3,8,13,14,31,32,38,40,41,42,43,44,45,46,47,48,49,50,51,52,67,94,95,96,97,98,99,134,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,318,319,320,321,322,323,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,],[0,-155,-137,-152,-153,-154,-150,-155,-1,-3,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-151,-138,-139,-140,-141,-142,-143,-2,-62,-63,-64,-65,-66,-67,-98,-99,-100,-101,-102,-103,-69,-68,-70,-71,-72,-73,-105,-104,-106,-107,-108,-109,-76,-74,-75,-77,-78,-79,-112,-110,-111,-113,-114,-115,-83,-80,-81,-82,-84,-85,-119,-116,-117,-118,-120,-121,-90,-86,-87,-88,-89,-91,-126,-122,-123,-124,-125,-127,-97,-92,-93,-94,-95,-96,-133,-128,-129,-130,-131,-132,-4,-134,-135,-136,-5,-7,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,]),'=':([2,54,63,208,209,309,310,311,312,313,372,373,374,375,],[15,15,100,292,293,324,325,326,327,328,406,407,408,409,]),'IN':([2,3,8,13,14,31,32,41,42,43,44,45,46,47,48,49,50,51,52,53,54,67,94,95,96,97,98,99,118,119,120,121,122,123,308,],[-155,16,-152,-153,-154,-150,-155,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,16,-155,-151,-138,-139,-140,-141,-142,-143,-138,-139,-140,-141,-142,-143,16,]),'L':([2,3,8,13,14,31,32,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,67,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,207,208,215,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,306,308,333,334,335,336,337,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,440,441,442,443,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,],[-155,17,-152,-153,-154,-150,-155,57,57,57,57,57,57,57,57,57,57,57,57,-144,-145,-146,-147,-148,-149,82,-155,89,-151,57,57,57,57,57,57,57,57,57,57,135,141,148,154,160,166,172,178,184,190,196,202,57,57,57,57,57,57,57,57,57,57,57,57,57,-155,299,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,82,57,57,57,57,57,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,57,57,57,57,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,]),'G':([2,3,8,13,14,31,32,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,67,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,207,208,215,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,306,308,333,334,335,336,337,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,440,441,442,443,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,],[-155,18,-152,-153,-154,-150,-155,58,58,58,58,58,58,58,58,58,58,58,58,-144,-145,-146,-147,-148,-149,83,-155,90,-151,58,58,58,58,58,58,58,58,58,58,136,142,147,153,161,167,173,179,185,191,197,203,58,58,58,58,58,58,58,58,58,58,58,58,58,-155,300,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,83,58,58,58,58,58,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,58,58,58,58,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,]),'GE':([2,3,8,13,14,31,32,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,67,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,207,208,215,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,306,308,333,334,335,336,337,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,440,441,442,443,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,],[-155,19,-152,-153,-154,-150,-155,59,59,59,59,59,59,59,59,59,59,59,59,-144,-145,-146,-147,-148,-149,84,-155,91,-151,59,59,59,59,59,59,59,59,59,59,137,143,149,155,159,165,174,180,186,192,198,204,59,59,59,59,59,59,59,59,59,59,59,59,59,-155,301,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,84,59,59,59,59,59,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,59,59,59,59,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,]),'LE':([2,3,8,13,14,31,32,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,67,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,207,208,215,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,306,308,333,334,335,336,337,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,440,441,442,443,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,],[-155,20,-152,-153,-154,-150,-155,60,60,60,60,60,60,60,60,60,60,60,60,-144,-145,-146,-147,-148,-149,85,-155,92,-151,60,60,60,60,60,60,60,60,60,60,138,144,150,156,162,168,171,177,187,193,199,205,60,60,60,60,60,60,60,60,60,60,60,60,60,-155,302,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,85,60,60,60,60,60,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,60,60,60,60,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,]),'EQ':([2,3,8,13,14,31,32,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,67,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,207,208,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,306,308,333,334,335,336,337,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,440,441,442,443,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,],[-155,21,-152,-153,-154,-150,-155,61,61,61,61,61,61,61,61,61,61,61,61,-144,-145,-146,-147,-148,-149,86,-155,-151,61,61,61,61,61,61,61,61,61,61,139,145,151,157,163,169,175,181,183,189,200,206,61,61,61,61,61,61,61,61,61,61,61,61,61,-155,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,86,61,61,61,61,61,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,61,61,61,61,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,]),'NE':([2,3,8,13,14,31,32,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,67,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,207,208,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,306,308,333,334,335,336,337,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,440,441,442,443,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,],[-155,22,-152,-153,-154,-150,-155,62,62,62,62,62,62,62,62,62,62,62,62,-144,-145,-146,-147,-148,-149,87,-155,93,-151,62,62,62,62,62,62,62,62,62,62,140,146,152,158,164,170,176,182,188,194,195,201,62,62,62,62,62,62,62,62,62,62,62,62,62,-155,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,87,62,62,62,62,62,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,62,62,62,62,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,]),'+':([2,3,8,13,14,31,32,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,67,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,207,208,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,306,308,333,334,335,336,337,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,440,441,442,443,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,],[-155,23,-152,-153,-154,-150,-155,23,23,23,23,23,23,23,23,23,23,23,23,-144,-145,-146,-147,-148,-149,23,-155,-151,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-155,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,342,348,354,360,366,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,444,450,456,462,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,-144,-145,-146,-147,-148,-149,]),'*':([2,3,8,13,14,31,32,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,67,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,207,208,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,306,308,333,334,335,336,337,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,440,441,442,443,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,],[-155,25,-152,-153,-154,-150,-155,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-146,-147,-148,-149,25,-155,-151,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-155,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,344,350,356,362,368,25,25,-146,-147,-148,-149,25,25,-146,-147,-148,-149,25,25,-146,-147,-148,-149,25,25,-146,-147,-148,-149,25,25,-146,-147,-148,-149,446,452,458,464,25,25,-146,-147,-148,-149,25,25,-146,-147,-148,-149,25,25,-146,-147,-148,-149,25,25,-146,-147,-148,-149,]),'/':([2,3,8,13,14,31,32,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,67,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,207,208,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,306,308,333,334,335,336,337,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,440,441,442,443,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,],[-155,26,-152,-153,-154,-150,-155,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-146,-147,-148,-149,26,-155,-151,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-155,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,345,351,357,363,369,26,26,-146,-147,-148,-149,26,26,-146,-147,-148,-149,26,26,-146,-147,-148,-149,26,26,-146,-147,-148,-149,26,26,-146,-147,-148,-149,447,453,459,465,26,26,-146,-147,-148,-149,26,26,-146,-147,-148,-149,26,26,-146,-147,-148,-149,26,26,-146,-147,-148,-149,]),'^':([2,3,8,13,14,31,32,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,67,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,207,208,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,306,308,333,334,335,336,337,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,440,441,442,443,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,],[-155,27,-152,-153,-154,-150,-155,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-148,-149,27,-155,-151,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-155,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,346,352,358,364,370,27,27,27,27,-148,-149,27,27,27,27,-148,-149,27,27,27,27,-148,-149,27,27,27,27,-148,-149,27,27,27,27,-148,-149,448,454,460,466,27,27,27,27,-148,-149,27,27,27,27,-148,-149,27,27,27,27,-148,-149,27,27,27,27,-148,-149,]),'%':([2,3,8,13,14,31,32,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,67,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,207,208,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,306,308,333,334,335,336,337,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,440,441,442,443,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,],[-155,28,-152,-153,-154,-150,-155,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-148,-149,28,-155,-151,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-155,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,347,353,359,365,371,28,28,28,28,-148,-149,28,28,28,28,-148,-149,28,28,28,28,-148,-149,28,28,28,28,-148,-149,28,28,28,28,-148,-149,449,455,461,467,28,28,28,28,-148,-149,28,28,28,28,-148,-149,28,28,28,28,-148,-149,28,28,28,28,-148,-149,]),'RBRACE':([2,3,8,13,14,31,32,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,67,94,95,96,97,98,99,118,119,120,121,122,123,134,207,208,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,303,304,305,306,307,308,318,319,320,321,322,323,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,],[-155,-137,-152,-153,-154,-150,-155,-1,-3,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-155,-151,-138,-139,-140,-141,-142,-143,-138,-139,-140,-141,-142,-143,-2,291,-155,-62,-63,-64,-65,-66,-67,-98,-99,-100,-101,-102,-103,-69,-68,-70,-71,-72,-73,-105,-104,-106,-107,-108,-109,-76,-74,-75,-77,-78,-79,-112,-110,-111,-113,-114,-115,-83,-80,-81,-82,-84,-85,-119,-116,-117,-118,-120,-121,-90,-86,-87,-88,-89,-91,-126,-122,-123,-124,-125,-127,-97,-92,-93,-94,-95,-96,-133,-128,-129,-130,-131,-132,-4,318,319,320,321,322,323,-134,-135,-136,-5,-7,-6,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,]),'LPAREN':([4,5,7,8,13,14,31,32,34,35,36,39,47,48,49,50,51,52,67,94,95,96,97,98,99,],[29,30,33,-152,-153,-154,-150,-155,64,65,66,68,-144,-145,-146,-147,-148,-149,-151,-138,-139,-140,-141,-142,-143,]),')':([8,13,14,31,32,37,47,48,49,50,51,52,67,94,95,96,97,98,99,],[-152,-153,-154,-150,-155,67,-144,-145,-146,-147,-148,-149,-151,-138,-139,-140,-141,-142,-143,]),'RPAREN':([8,13,14,31,32,38,40,47,48,49,50,51,52,53,54,55,67,94,95,96,97,98,99,101,102,103,104,118,119,120,121,122,123,125,126,127,128,129,134,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,314,315,316,317,318,319,320,321,322,323,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,],[-152,-153,-154,-150,-155,-1,-3,-144,-145,-146,-147,-148,-149,81,-155,88,-151,-138,-139,-140,-141,-142,-143,131,132,133,134,-138,-139,-140,-141,-142,-143,210,211,212,213,214,-2,-62,-63,-64,-65,-66,-67,-98,-99,-100,-101,-102,-103,-69,-68,-70,-71,-72,-73,-105,-104,-106,-107,-108,-109,-76,-74,-75,-77,-78,-79,-112,-110,-111,-113,-114,-115,-83,-80,-81,-82,-84,-85,-119,-116,-117,-118,-120,-121,-90,-86,-87,-88,-89,-91,-126,-122,-123,-124,-125,-127,-97,-92,-93,-94,-95,-96,-133,-128,-129,-130,-131,-132,-4,329,330,331,332,-134,-135,-136,-5,-7,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,]),'AND':([8,13,14,31,32,41,42,43,44,45,46,47,48,49,50,51,52,67,94,95,96,97,98,99,118,119,120,121,122,123,],[-152,-153,-154,-150,-155,69,71,73,75,77,79,-144,-145,-146,-147,-148,-149,-151,-138,-139,-140,-141,-142,-143,69,71,73,75,77,79,]),'OR':([8,13,14,31,32,41,42,43,44,45,46,47,48,49,50,51,52,67,94,95,96,97,98,99,118,119,120,121,122,123,],[-152,-153,-154,-150,-155,70,72,74,76,78,80,-144,-145,-146,-147,-148,-149,-151,-138,-139,-140,-141,-142,-143,70,72,74,76,78,80,]),'INPUT':([15,],[39,]),'LBRACE':([81,88,131,132,133,210,211,212,213,214,329,330,331,332,],[117,124,216,217,218,294,295,296,297,298,338,339,340,341,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,29,216,217,218,293,],[1,55,303,304,305,307,]),'expression':([0,6,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,57,58,59,60,61,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,100,117,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,216,217,218,292,293,324,325,326,327,328,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,406,407,408,409,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,],[3,31,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,125,126,127,128,129,130,207,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,3,3,3,306,308,333,334,335,336,337,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,440,441,442,443,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME = expression','statement',3,'p_statement_assign','sapphire.py',101),
  ('statement -> NAME = INPUT LPAREN expression RPAREN','statement',6,'p_input_assign','sapphire.py',107),
  ('statement -> expression IN expression','statement',3,'p_in_comparison','sapphire.py',120),
  ('statement -> IF LPAREN expression RPAREN LBRACE expression RBRACE','statement',7,'p_if_loop','sapphire.py',135),
  ('statement -> IF LPAREN expression RPAREN LBRACE NAME = expression RBRACE','statement',9,'p_if_loop','sapphire.py',136),
  ('statement -> IF LPAREN statement RPAREN LBRACE NAME = expression RBRACE','statement',9,'p_if_loop','sapphire.py',137),
  ('statement -> IF LPAREN statement RPAREN LBRACE NAME = statement RBRACE','statement',9,'p_if_loop','sapphire.py',138),
  ('statement -> WHILE LPAREN NAME L expression RPAREN LBRACE NAME = expression + expression RBRACE','statement',13,'p_while_loop','sapphire.py',146),
  ('statement -> WHILE LPAREN NAME L expression RPAREN LBRACE NAME = expression - expression RBRACE','statement',13,'p_while_loop','sapphire.py',147),
  ('statement -> WHILE LPAREN NAME L expression RPAREN LBRACE NAME = expression * expression RBRACE','statement',13,'p_while_loop','sapphire.py',148),
  ('statement -> WHILE LPAREN NAME L expression RPAREN LBRACE NAME = expression / expression RBRACE','statement',13,'p_while_loop','sapphire.py',149),
  ('statement -> WHILE LPAREN NAME L expression RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',13,'p_while_loop','sapphire.py',150),
  ('statement -> WHILE LPAREN NAME L expression RPAREN LBRACE NAME = expression % expression RBRACE','statement',13,'p_while_loop','sapphire.py',151),
  ('statement -> WHILE LPAREN NAME G expression RPAREN LBRACE NAME = expression + expression RBRACE','statement',13,'p_while_loop','sapphire.py',152),
  ('statement -> WHILE LPAREN NAME G expression RPAREN LBRACE NAME = expression - expression RBRACE','statement',13,'p_while_loop','sapphire.py',153),
  ('statement -> WHILE LPAREN NAME G expression RPAREN LBRACE NAME = expression * expression RBRACE','statement',13,'p_while_loop','sapphire.py',154),
  ('statement -> WHILE LPAREN NAME G expression RPAREN LBRACE NAME = expression / expression RBRACE','statement',13,'p_while_loop','sapphire.py',155),
  ('statement -> WHILE LPAREN NAME G expression RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',13,'p_while_loop','sapphire.py',156),
  ('statement -> WHILE LPAREN NAME G expression RPAREN LBRACE NAME = expression % expression RBRACE','statement',13,'p_while_loop','sapphire.py',157),
  ('statement -> WHILE LPAREN NAME GE expression RPAREN LBRACE NAME = expression + expression RBRACE','statement',13,'p_while_loop','sapphire.py',158),
  ('statement -> WHILE LPAREN NAME GE expression RPAREN LBRACE NAME = expression - expression RBRACE','statement',13,'p_while_loop','sapphire.py',159),
  ('statement -> WHILE LPAREN NAME GE expression RPAREN LBRACE NAME = expression * expression RBRACE','statement',13,'p_while_loop','sapphire.py',160),
  ('statement -> WHILE LPAREN NAME GE expression RPAREN LBRACE NAME = expression / expression RBRACE','statement',13,'p_while_loop','sapphire.py',161),
  ('statement -> WHILE LPAREN NAME GE expression RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',13,'p_while_loop','sapphire.py',162),
  ('statement -> WHILE LPAREN NAME GE expression RPAREN LBRACE NAME = expression % expression RBRACE','statement',13,'p_while_loop','sapphire.py',163),
  ('statement -> WHILE LPAREN NAME LE expression RPAREN LBRACE NAME = expression + expression RBRACE','statement',13,'p_while_loop','sapphire.py',164),
  ('statement -> WHILE LPAREN NAME LE expression RPAREN LBRACE NAME = expression - expression RBRACE','statement',13,'p_while_loop','sapphire.py',165),
  ('statement -> WHILE LPAREN NAME LE expression RPAREN LBRACE NAME = expression * expression RBRACE','statement',13,'p_while_loop','sapphire.py',166),
  ('statement -> WHILE LPAREN NAME LE expression RPAREN LBRACE NAME = expression / expression RBRACE','statement',13,'p_while_loop','sapphire.py',167),
  ('statement -> WHILE LPAREN NAME LE expression RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',13,'p_while_loop','sapphire.py',168),
  ('statement -> WHILE LPAREN NAME LE expression RPAREN LBRACE NAME = expression % expression RBRACE','statement',13,'p_while_loop','sapphire.py',169),
  ('statement -> WHILE LPAREN NAME NE expression RPAREN LBRACE NAME = expression + expression RBRACE','statement',13,'p_while_loop','sapphire.py',170),
  ('statement -> WHILE LPAREN NAME NE expression RPAREN LBRACE NAME = expression - expression RBRACE','statement',13,'p_while_loop','sapphire.py',171),
  ('statement -> WHILE LPAREN NAME NE expression RPAREN LBRACE NAME = expression * expression RBRACE','statement',13,'p_while_loop','sapphire.py',172),
  ('statement -> WHILE LPAREN NAME NE expression RPAREN LBRACE NAME = expression / expression RBRACE','statement',13,'p_while_loop','sapphire.py',173),
  ('statement -> WHILE LPAREN NAME NE expression RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',13,'p_while_loop','sapphire.py',174),
  ('statement -> WHILE LPAREN NAME NE expression RPAREN LBRACE NAME = expression % expression RBRACE','statement',13,'p_while_loop','sapphire.py',175),
  ('statement -> FOR LPAREN NAME = expression NAME L NUMBER RPAREN LBRACE NAME = expression + expression RBRACE','statement',16,'p_for_loop','sapphire.py',266),
  ('statement -> FOR LPAREN NAME = expression NAME L NUMBER RPAREN LBRACE NAME = expression - expression RBRACE','statement',16,'p_for_loop','sapphire.py',267),
  ('statement -> FOR LPAREN NAME = expression NAME L NUMBER RPAREN LBRACE NAME = expression * expression RBRACE','statement',16,'p_for_loop','sapphire.py',268),
  ('statement -> FOR LPAREN NAME = expression NAME L NUMBER RPAREN LBRACE NAME = expression / expression RBRACE','statement',16,'p_for_loop','sapphire.py',269),
  ('statement -> FOR LPAREN NAME = expression NAME L NUMBER RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',16,'p_for_loop','sapphire.py',270),
  ('statement -> FOR LPAREN NAME = expression NAME L NUMBER RPAREN LBRACE NAME = expression % expression RBRACE','statement',16,'p_for_loop','sapphire.py',271),
  ('statement -> FOR LPAREN NAME = expression NAME G NUMBER RPAREN LBRACE NAME = expression + expression RBRACE','statement',16,'p_for_loop','sapphire.py',272),
  ('statement -> FOR LPAREN NAME = expression NAME G NUMBER RPAREN LBRACE NAME = expression - expression RBRACE','statement',16,'p_for_loop','sapphire.py',273),
  ('statement -> FOR LPAREN NAME = expression NAME G NUMBER RPAREN LBRACE NAME = expression * expression RBRACE','statement',16,'p_for_loop','sapphire.py',274),
  ('statement -> FOR LPAREN NAME = expression NAME G NUMBER RPAREN LBRACE NAME = expression / expression RBRACE','statement',16,'p_for_loop','sapphire.py',275),
  ('statement -> FOR LPAREN NAME = expression NAME G NUMBER RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',16,'p_for_loop','sapphire.py',276),
  ('statement -> FOR LPAREN NAME = expression NAME G NUMBER RPAREN LBRACE NAME = expression % expression RBRACE','statement',16,'p_for_loop','sapphire.py',277),
  ('statement -> FOR LPAREN NAME = expression NAME GE NUMBER RPAREN LBRACE NAME = expression + expression RBRACE','statement',16,'p_for_loop','sapphire.py',278),
  ('statement -> FOR LPAREN NAME = expression NAME GE NUMBER RPAREN LBRACE NAME = expression - expression RBRACE','statement',16,'p_for_loop','sapphire.py',279),
  ('statement -> FOR LPAREN NAME = expression NAME GE NUMBER RPAREN LBRACE NAME = expression * expression RBRACE','statement',16,'p_for_loop','sapphire.py',280),
  ('statement -> FOR LPAREN NAME = expression NAME GE NUMBER RPAREN LBRACE NAME = expression / expression RBRACE','statement',16,'p_for_loop','sapphire.py',281),
  ('statement -> FOR LPAREN NAME = expression NAME GE NUMBER RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',16,'p_for_loop','sapphire.py',282),
  ('statement -> FOR LPAREN NAME = expression NAME GE NUMBER RPAREN LBRACE NAME = expression % expression RBRACE','statement',16,'p_for_loop','sapphire.py',283),
  ('statement -> FOR LPAREN NAME = expression NAME LE NUMBER RPAREN LBRACE NAME = expression + expression RBRACE','statement',16,'p_for_loop','sapphire.py',284),
  ('statement -> FOR LPAREN NAME = expression NAME LE NUMBER RPAREN LBRACE NAME = expression - expression RBRACE','statement',16,'p_for_loop','sapphire.py',285),
  ('statement -> FOR LPAREN NAME = expression NAME LE NUMBER RPAREN LBRACE NAME = expression * expression RBRACE','statement',16,'p_for_loop','sapphire.py',286),
  ('statement -> FOR LPAREN NAME = expression NAME LE NUMBER RPAREN LBRACE NAME = expression / expression RBRACE','statement',16,'p_for_loop','sapphire.py',287),
  ('statement -> FOR LPAREN NAME = expression NAME LE NUMBER RPAREN LBRACE NAME = expression ^ expression RBRACE','statement',16,'p_for_loop','sapphire.py',288),
  ('statement -> FOR LPAREN NAME = expression NAME LE NUMBER RPAREN LBRACE NAME = expression % expression RBRACE','statement',16,'p_for_loop','sapphire.py',289),
  ('statement -> expression L expression AND expression L expression','statement',7,'p_conditional_and','sapphire.py',351),
  ('statement -> expression L expression AND expression G expression','statement',7,'p_conditional_and','sapphire.py',352),
  ('statement -> expression L expression AND expression GE expression','statement',7,'p_conditional_and','sapphire.py',353),
  ('statement -> expression L expression AND expression LE expression','statement',7,'p_conditional_and','sapphire.py',354),
  ('statement -> expression L expression AND expression EQ expression','statement',7,'p_conditional_and','sapphire.py',355),
  ('statement -> expression L expression AND expression NE expression','statement',7,'p_conditional_and','sapphire.py',356),
  ('statement -> expression G expression AND expression L expression','statement',7,'p_conditional_and','sapphire.py',357),
  ('statement -> expression G expression AND expression G expression','statement',7,'p_conditional_and','sapphire.py',358),
  ('statement -> expression G expression AND expression GE expression','statement',7,'p_conditional_and','sapphire.py',359),
  ('statement -> expression G expression AND expression LE expression','statement',7,'p_conditional_and','sapphire.py',360),
  ('statement -> expression G expression AND expression EQ expression','statement',7,'p_conditional_and','sapphire.py',361),
  ('statement -> expression G expression AND expression NE expression','statement',7,'p_conditional_and','sapphire.py',362),
  ('statement -> expression GE expression AND expression L expression','statement',7,'p_conditional_and','sapphire.py',363),
  ('statement -> expression GE expression AND expression G expression','statement',7,'p_conditional_and','sapphire.py',364),
  ('statement -> expression GE expression AND expression GE expression','statement',7,'p_conditional_and','sapphire.py',365),
  ('statement -> expression GE expression AND expression LE expression','statement',7,'p_conditional_and','sapphire.py',366),
  ('statement -> expression GE expression AND expression EQ expression','statement',7,'p_conditional_and','sapphire.py',367),
  ('statement -> expression GE expression AND expression NE expression','statement',7,'p_conditional_and','sapphire.py',368),
  ('statement -> expression LE expression AND expression L expression','statement',7,'p_conditional_and','sapphire.py',369),
  ('statement -> expression LE expression AND expression G expression','statement',7,'p_conditional_and','sapphire.py',370),
  ('statement -> expression LE expression AND expression GE expression','statement',7,'p_conditional_and','sapphire.py',371),
  ('statement -> expression LE expression AND expression LE expression','statement',7,'p_conditional_and','sapphire.py',372),
  ('statement -> expression LE expression AND expression EQ expression','statement',7,'p_conditional_and','sapphire.py',373),
  ('statement -> expression LE expression AND expression NE expression','statement',7,'p_conditional_and','sapphire.py',374),
  ('statement -> expression EQ expression AND expression L expression','statement',7,'p_conditional_and','sapphire.py',375),
  ('statement -> expression EQ expression AND expression G expression','statement',7,'p_conditional_and','sapphire.py',376),
  ('statement -> expression EQ expression AND expression GE expression','statement',7,'p_conditional_and','sapphire.py',377),
  ('statement -> expression EQ expression AND expression LE expression','statement',7,'p_conditional_and','sapphire.py',378),
  ('statement -> expression EQ expression AND expression EQ expression','statement',7,'p_conditional_and','sapphire.py',379),
  ('statement -> expression EQ expression AND expression NE expression','statement',7,'p_conditional_and','sapphire.py',380),
  ('statement -> expression NE expression AND expression L expression','statement',7,'p_conditional_and','sapphire.py',381),
  ('statement -> expression NE expression AND expression G expression','statement',7,'p_conditional_and','sapphire.py',382),
  ('statement -> expression NE expression AND expression GE expression','statement',7,'p_conditional_and','sapphire.py',383),
  ('statement -> expression NE expression AND expression LE expression','statement',7,'p_conditional_and','sapphire.py',384),
  ('statement -> expression NE expression AND expression EQ expression','statement',7,'p_conditional_and','sapphire.py',385),
  ('statement -> expression NE expression AND expression NE expression','statement',7,'p_conditional_and','sapphire.py',386),
  ('statement -> expression L expression OR expression L expression','statement',7,'p_conditional_or','sapphire.py',431),
  ('statement -> expression L expression OR expression G expression','statement',7,'p_conditional_or','sapphire.py',432),
  ('statement -> expression L expression OR expression GE expression','statement',7,'p_conditional_or','sapphire.py',433),
  ('statement -> expression L expression OR expression LE expression','statement',7,'p_conditional_or','sapphire.py',434),
  ('statement -> expression L expression OR expression EQ expression','statement',7,'p_conditional_or','sapphire.py',435),
  ('statement -> expression L expression OR expression NE expression','statement',7,'p_conditional_or','sapphire.py',436),
  ('statement -> expression G expression OR expression L expression','statement',7,'p_conditional_or','sapphire.py',437),
  ('statement -> expression G expression OR expression G expression','statement',7,'p_conditional_or','sapphire.py',438),
  ('statement -> expression G expression OR expression GE expression','statement',7,'p_conditional_or','sapphire.py',439),
  ('statement -> expression G expression OR expression LE expression','statement',7,'p_conditional_or','sapphire.py',440),
  ('statement -> expression G expression OR expression EQ expression','statement',7,'p_conditional_or','sapphire.py',441),
  ('statement -> expression G expression OR expression NE expression','statement',7,'p_conditional_or','sapphire.py',442),
  ('statement -> expression GE expression OR expression L expression','statement',7,'p_conditional_or','sapphire.py',443),
  ('statement -> expression GE expression OR expression G expression','statement',7,'p_conditional_or','sapphire.py',444),
  ('statement -> expression GE expression OR expression GE expression','statement',7,'p_conditional_or','sapphire.py',445),
  ('statement -> expression GE expression OR expression LE expression','statement',7,'p_conditional_or','sapphire.py',446),
  ('statement -> expression GE expression OR expression EQ expression','statement',7,'p_conditional_or','sapphire.py',447),
  ('statement -> expression GE expression OR expression NE expression','statement',7,'p_conditional_or','sapphire.py',448),
  ('statement -> expression LE expression OR expression L expression','statement',7,'p_conditional_or','sapphire.py',449),
  ('statement -> expression LE expression OR expression G expression','statement',7,'p_conditional_or','sapphire.py',450),
  ('statement -> expression LE expression OR expression GE expression','statement',7,'p_conditional_or','sapphire.py',451),
  ('statement -> expression LE expression OR expression LE expression','statement',7,'p_conditional_or','sapphire.py',452),
  ('statement -> expression LE expression OR expression EQ expression','statement',7,'p_conditional_or','sapphire.py',453),
  ('statement -> expression LE expression OR expression NE expression','statement',7,'p_conditional_or','sapphire.py',454),
  ('statement -> expression EQ expression OR expression L expression','statement',7,'p_conditional_or','sapphire.py',455),
  ('statement -> expression EQ expression OR expression G expression','statement',7,'p_conditional_or','sapphire.py',456),
  ('statement -> expression EQ expression OR expression GE expression','statement',7,'p_conditional_or','sapphire.py',457),
  ('statement -> expression EQ expression OR expression LE expression','statement',7,'p_conditional_or','sapphire.py',458),
  ('statement -> expression EQ expression OR expression EQ expression','statement',7,'p_conditional_or','sapphire.py',459),
  ('statement -> expression EQ expression OR expression NE expression','statement',7,'p_conditional_or','sapphire.py',460),
  ('statement -> expression NE expression OR expression L expression','statement',7,'p_conditional_or','sapphire.py',461),
  ('statement -> expression NE expression OR expression G expression','statement',7,'p_conditional_or','sapphire.py',462),
  ('statement -> expression NE expression OR expression GE expression','statement',7,'p_conditional_or','sapphire.py',463),
  ('statement -> expression NE expression OR expression LE expression','statement',7,'p_conditional_or','sapphire.py',464),
  ('statement -> expression NE expression OR expression EQ expression','statement',7,'p_conditional_or','sapphire.py',465),
  ('statement -> expression NE expression OR expression NE expression','statement',7,'p_conditional_or','sapphire.py',466),
  ('statement -> FUNCTION expression LPAREN expression RPAREN LBRACE statement RBRACE','statement',8,'p_function_def','sapphire.py',511),
  ('statement -> CLASS expression LPAREN expression RPAREN LBRACE statement RBRACE','statement',8,'p_class_def','sapphire.py',514),
  ('statement -> BUILD expression LPAREN expression RPAREN LBRACE statement RBRACE','statement',8,'p_build_def','sapphire.py',517),
  ('statement -> expression','statement',1,'p_statement_expr','sapphire.py',520),
  ('expression -> expression L expression','expression',3,'p_bool_cond','sapphire.py',525),
  ('expression -> expression G expression','expression',3,'p_bool_cond','sapphire.py',526),
  ('expression -> expression GE expression','expression',3,'p_bool_cond','sapphire.py',527),
  ('expression -> expression LE expression','expression',3,'p_bool_cond','sapphire.py',528),
  ('expression -> expression EQ expression','expression',3,'p_bool_cond','sapphire.py',529),
  ('expression -> expression NE expression','expression',3,'p_bool_cond','sapphire.py',530),
  ('expression -> expression + expression','expression',3,'p_expression_binop','sapphire.py',552),
  ('expression -> expression - expression','expression',3,'p_expression_binop','sapphire.py',553),
  ('expression -> expression * expression','expression',3,'p_expression_binop','sapphire.py',554),
  ('expression -> expression / expression','expression',3,'p_expression_binop','sapphire.py',555),
  ('expression -> expression ^ expression','expression',3,'p_expression_binop','sapphire.py',556),
  ('expression -> expression % expression','expression',3,'p_expression_binop','sapphire.py',557),
  ('expression -> - expression','expression',2,'p_expression_uminus','sapphire.py',574),
  ('expression -> ( expression )','expression',3,'p_expression_group','sapphire.py',578),
  ('expression -> NUMBER','expression',1,'p_expression_number','sapphire.py',583),
  ('expression -> ARRAY','expression',1,'p_expression_array','sapphire.py',586),
  ('expression -> STRING','expression',1,'p_expression_string','sapphire.py',593),
  ('expression -> NAME','expression',1,'p_expression_name','sapphire.py',598),
]
